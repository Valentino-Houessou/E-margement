-- MySQL Script generated by MySQL Workbench
-- Sat Dec 12 14:58:46 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema EmargementBD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EmargementBD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EmargementBD` ;
USE `EmargementBD` ;

-- -----------------------------------------------------
-- Table `EmargementBD`.`utilisateurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`utilisateurs` (
  `idUtilisateur` INT NOT NULL,
  `nom` VARCHAR(250) NOT NULL,
  `prenom` VARCHAR(250) NOT NULL,
  `adresseMail` VARCHAR(250) NOT NULL,
  `motDePasse` VARCHAR(250) NULL,
  `dateDeNaissance` TIMESTAMP NOT NULL,
  `lienPhoto` VARCHAR(250) NULL,
  PRIMARY KEY (`idUtilisateur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`modules` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`etudiants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`etudiants` (
  `statut` VARCHAR(250) NOT NULL,
  `id` VARCHAR(45) NOT NULL,
  `utilisateurs_idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_etudiants_utilisateurs1_idx` (`utilisateurs_idUtilisateur` ASC),
  CONSTRAINT `fk_etudiants_utilisateurs1`
    FOREIGN KEY (`utilisateurs_idUtilisateur`)
    REFERENCES `EmargementBD`.`utilisateurs` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`admins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`admins` (
  `statut` VARCHAR(250) NOT NULL,
  `id` VARCHAR(45) NOT NULL,
  `utilisateurs_idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_admins_utilisateurs1_idx` (`utilisateurs_idUtilisateur` ASC),
  CONSTRAINT `fk_admins_utilisateurs1`
    FOREIGN KEY (`utilisateurs_idUtilisateur`)
    REFERENCES `EmargementBD`.`utilisateurs` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`enseignants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`enseignants` (
  `statut` VARCHAR(250) NOT NULL,
  `id` VARCHAR(45) NOT NULL,
  `utilisateurs_idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_enseignants_utilisateurs1_idx` (`utilisateurs_idUtilisateur` ASC),
  CONSTRAINT `fk_enseignants_utilisateurs1`
    FOREIGN KEY (`utilisateurs_idUtilisateur`)
    REFERENCES `EmargementBD`.`utilisateurs` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`promotions` (
  `id` INT NOT NULL,
  `anneeScolaire` VARCHAR(45) NOT NULL,
  `groupe` VARCHAR(250) NOT NULL,
  `type` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`matieres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`matieres` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NOT NULL,
  `libelleAbregee` VARCHAR(45) NULL,
  `semestre` VARCHAR(45) NOT NULL,
  `nombreHeures` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`enseignements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`enseignements` (
  `id` INT NULL,
  `enseignants_id` VARCHAR(45) NOT NULL,
  `matieres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `enseignants_id`, `matieres_id`),
  INDEX `fk_enseignements_enseignants1_idx` (`enseignants_id` ASC),
  INDEX `fk_enseignements_matieres1_idx` (`matieres_id` ASC),
  CONSTRAINT `fk_enseignements_enseignants1`
    FOREIGN KEY (`enseignants_id`)
    REFERENCES `EmargementBD`.`enseignants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_enseignements_matieres1`
    FOREIGN KEY (`matieres_id`)
    REFERENCES `EmargementBD`.`matieres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`universites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`universites` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`batiments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`batiments` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NULL,
  `universites_id` INT NOT NULL,
  PRIMARY KEY (`id`, `universites_id`),
  INDEX `fk_batiments_universites1_idx` (`universites_id` ASC),
  CONSTRAINT `fk_batiments_universites1`
    FOREIGN KEY (`universites_id`)
    REFERENCES `EmargementBD`.`universites` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`salles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`salles` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NULL,
  `batiments_id` INT NOT NULL,
  PRIMARY KEY (`id`, `batiments_id`),
  INDEX `fk_salles_batiments1_idx` (`batiments_id` ASC),
  CONSTRAINT `fk_salles_batiments1`
    FOREIGN KEY (`batiments_id`)
    REFERENCES `EmargementBD`.`batiments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`Periode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`Periode` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(250) NULL,
  `dateDeDebut` TIMESTAMP NULL,
  `dateFin` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`cours` (
  `id` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  `heureDebut` TIMESTAMP NULL,
  `heureFin` TIMESTAMP NULL,
  `enseignements_id` INT NOT NULL,
  `enseignements_enseignants_id` VARCHAR(45) NOT NULL,
  `enseignements_matieres_id` INT NOT NULL,
  `salles_id` INT NOT NULL,
  `Periode_id` INT NOT NULL,
  PRIMARY KEY (`id`, `enseignements_id`, `enseignements_enseignants_id`, `enseignements_matieres_id`, `salles_id`, `Periode_id`),
  INDEX `fk_cours_enseignements1_idx` (`enseignements_id` ASC, `enseignements_enseignants_id` ASC, `enseignements_matieres_id` ASC),
  INDEX `fk_cours_salles1_idx` (`salles_id` ASC),
  INDEX `fk_cours_Periode1_idx` (`Periode_id` ASC),
  CONSTRAINT `fk_cours_enseignements1`
    FOREIGN KEY (`enseignements_id` , `enseignements_enseignants_id` , `enseignements_matieres_id`)
    REFERENCES `EmargementBD`.`enseignements` (`id` , `enseignants_id` , `matieres_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cours_salles1`
    FOREIGN KEY (`salles_id`)
    REFERENCES `EmargementBD`.`salles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cours_Periode1`
    FOREIGN KEY (`Periode_id`)
    REFERENCES `EmargementBD`.`Periode` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`modules_has_utilisateurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`modules_has_utilisateurs` (
  `modules_id` INT NOT NULL,
  `utilisateurs_idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`modules_id`, `utilisateurs_idUtilisateur`),
  INDEX `fk_modules_has_utilisateurs_utilisateurs1_idx` (`utilisateurs_idUtilisateur` ASC),
  INDEX `fk_modules_has_utilisateurs_modules_idx` (`modules_id` ASC),
  CONSTRAINT `fk_modules_has_utilisateurs_modules`
    FOREIGN KEY (`modules_id`)
    REFERENCES `EmargementBD`.`modules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_modules_has_utilisateurs_utilisateurs1`
    FOREIGN KEY (`utilisateurs_idUtilisateur`)
    REFERENCES `EmargementBD`.`utilisateurs` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`etudiants_has_promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`etudiants_has_promotions` (
  `etudiants_id` VARCHAR(45) NOT NULL,
  `promotions_id` INT NOT NULL,
  PRIMARY KEY (`etudiants_id`, `promotions_id`),
  INDEX `fk_etudiants_has_promotions_promotions1_idx` (`promotions_id` ASC),
  INDEX `fk_etudiants_has_promotions_etudiants1_idx` (`etudiants_id` ASC),
  CONSTRAINT `fk_etudiants_has_promotions_etudiants1`
    FOREIGN KEY (`etudiants_id`)
    REFERENCES `EmargementBD`.`etudiants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_etudiants_has_promotions_promotions1`
    FOREIGN KEY (`promotions_id`)
    REFERENCES `EmargementBD`.`promotions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`matieres_has_promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`matieres_has_promotions` (
  `matieres_id` INT NOT NULL,
  `promotions_id` INT NOT NULL,
  `filiere` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`matieres_id`, `promotions_id`),
  INDEX `fk_matieres_has_promotions_promotions1_idx` (`promotions_id` ASC),
  INDEX `fk_matieres_has_promotions_matieres1_idx` (`matieres_id` ASC),
  CONSTRAINT `fk_matieres_has_promotions_matieres1`
    FOREIGN KEY (`matieres_id`)
    REFERENCES `EmargementBD`.`matieres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_matieres_has_promotions_promotions1`
    FOREIGN KEY (`promotions_id`)
    REFERENCES `EmargementBD`.`promotions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EmargementBD`.`presences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EmargementBD`.`presences` (
  `id` INT NOT NULL,
  `emargement` TINYINT(1) NULL,
  `motif` VARCHAR(250) NULL,
  `justificatif` VARCHAR(250) NULL,
  `cours_id` INT NOT NULL,
  `cours_enseignements_id` INT NOT NULL,
  `cours_enseignements_enseignants_id` VARCHAR(45) NOT NULL,
  `cours_enseignements_matieres_id` INT NOT NULL,
  `cours_salles_id` INT NOT NULL,
  `etudiants_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `cours_id`, `cours_enseignements_id`, `cours_enseignements_enseignants_id`, `cours_enseignements_matieres_id`, `cours_salles_id`, `etudiants_id`),
  INDEX `fk_presences_cours1_idx` (`cours_id` ASC, `cours_enseignements_id` ASC, `cours_enseignements_enseignants_id` ASC, `cours_enseignements_matieres_id` ASC, `cours_salles_id` ASC),
  INDEX `fk_presences_etudiants1_idx` (`etudiants_id` ASC),
  CONSTRAINT `fk_presences_cours1`
    FOREIGN KEY (`cours_id` , `cours_enseignements_id` , `cours_enseignements_enseignants_id` , `cours_enseignements_matieres_id` , `cours_salles_id`)
    REFERENCES `EmargementBD`.`cours` (`id` , `enseignements_id` , `enseignements_enseignants_id` , `enseignements_matieres_id` , `salles_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_presences_etudiants1`
    FOREIGN KEY (`etudiants_id`)
    REFERENCES `EmargementBD`.`etudiants` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
